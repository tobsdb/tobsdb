TODO: 

o Work on the docs
  o Document how disk writes work
o Transactions 
  o Idea: could do map of [transation_id] -> [db_data] and the client has to include the transaction id to execute an operation on the transaction
  o Resources:
    o https://www.youtube.com/watch?v=DJ5u5HrbcMk
    o https://en.wikipedia.org/wiki/ACID
    o search: "transaction isolaton levels", "record lock", "table lock", "2-phase commit"
    o https://www.db.bme.hu/databases/principles-of-database-and-knowledge-base-systems-volume-1-1.pdf
    o Database Internals - Oreilley
x Move from JSON to BSON (or some other format, maybe protobuf???) for data persistence.
  o Requirements: 
    o Faster encoding and decoding than JSON
    o Less human readable
o Work on clients
  o Golang client
  o Rust client
  x Typescript client
o Work on tdb-cli: interactive CLI tool for making tdb queries
  o Can be used to manage tdb server access and update settings
o Introduce secondary key which is user tracked
o Relation Features:
  o Joint find/delete/update
  o Marry relation(join two rows)
  o Validate many to one/many relations
o Get versioning to work on pkg.dev.go
x "Schema.tdb to Language Types" tool for official clients
  x Golang
  x Rust
  x Typescript
x Disallow special characters in table and field names (e.g. table-name, *field*)
  x Only allow alphanumeric characters and underscore
o Support for database users with different privileges and permissions
x Keep order of fields and tables from schema.
  x Custom ordered map, that uses insert order. i.e. FIFO
o New Actions:
  o Add action to create new db with schema
  o Add action to edit db schema
  o Add action to get saved db schema
o Use TCP instead of websocket for server
o Allow restricting connection origin
  o Consider per db access, per user access or instance access
o Do mutex locking on a per table basis
  x Do mutex locking on a per schema basis


Brainstorming Transactions Notes:

Each row, has its own "history" of changes, each change having a timestamp.
A transaction only interacts with the version of a row before its start time.
Move off integer primary key to UUIDv7(timestamp) primary key.

